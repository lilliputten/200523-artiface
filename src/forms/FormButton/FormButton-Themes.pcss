/** @module FormButton-Styles.styles
 *  @since 2020.07.20, 19:24
 *  @changed 2020.12.24, 04:09
 */

.FormButton {

  transition: box-shadow $(transitionTime)ms, background $(transitionTime)ms;

  .FormButton-Text,
  .FormButton-Icon {
    // transition: color $(transitionTime)ms, opacity $(transitionTime)ms;
    color: #000;
    opacity: .9;
  }
  .FormButton-Icon {
    transition: color $(transitionTime)ms, opacity $(transitionTime)ms;
    opacity: .4;
  }
  // .FormButton-Text { // Crispy animation text...
  //   transition: color $(transitionTime)ms, opacity $(transitionTime)ms;
  //   // -webkit-font-smoothing: antialised;
  //   // backface-visibility: hidden;
  //   transform: translateZ(0);
  //   // -webkit-font-smoothing: subpixel-antialiased;
  // }
  &.FormButton_active,
  &.FormItem_focused,
  &.FormItem_hovered {
    .FormButton-Text {
      opacity: 1;
    }
    .FormButton-Icon {
      opacity: .5;
    }
  }

  &.FormButton_onDark {
    $color: #fff; // $neutralDarkColor;
    .FormButton-Icon,
    .FormButton-Text {
      color: $color;
    }
  }

  &_plain {
    $bgColor: color($neutralLightColor tint(10));
    $borderColor: $formItemBorderColor;
    $hoveredBorderColor: color($borderColor shade(10));
    $activeBorderColor: color($borderColor shade(15));
    $hoveredBgColor: color($bgColor shade(8));
    $activeBgColor: color($bgColor shade(15));
    $glowColor: $borderColor; // $formItemGlowColor;
    $hoveredGlowColor: color($hoveredBgColor alpha(.5)); // color($glowColor alpha(1));
    $activeGlowColor: $activeBgColor; // color($glowColor alpha(1) shade(10));
    &.FormButton_active,
    &.FormItem_focused,
    &.FormItem_hovered {
      // $borderColor, $innerSize, $innerGlowSize, $outerGlowColor, $outerSize, $outerGlowSize
      @mixin FormItemFrame $hoveredBorderColor, $(formItemBorderSize)px, 1px, $hoveredGlowColor, 1px, $(formItemOuterGlow)px;
    }
    &.FormButton_active,
    &.FormItem_focused {
      @mixin FormItemFrame $activeBorderColor, $(formItemBorderSize)px, 2px, $activeGlowColor, 2px, 1px; // @calc($formItemOuterGlow - 2)px;
    }
    &.FormButton_onDark {
      $hoveredBorderColor: color($borderColor shade(10) alpha(.5));
      $activeBorderColor: color($borderColor shade(15));
      $hoveredGlowColor: color($hoveredBgColor alpha(.2));
      $activeGlowColor: color($activeBgColor alpha(.2));
      // $hoveredBorderColor: color($primaryColor shade(0) alpha(1));
      // $activeBorderColor: color($primaryColor shade(0));
      // $hoveredGlowColor: color($primaryColor alpha(.2));
      // $activeGlowColor: color($primaryColor alpha(.2));
      &.FormButton_active,
      &.FormItem_focused,
      &.FormItem_hovered {
        @mixin FormItemFrame $hoveredBorderColor, $(formItemBorderSize)px, 1px, $hoveredGlowColor, 1px, $(formItemOuterGlow)px;
      }
      &.FormButton_active,
      &.FormItem_focused {
        @mixin FormItemFrame $activeBorderColor, $(formItemBorderSize)px, 2px, $activeGlowColor, 2px, 1px; // @calc($formItemOuterGlow - 2)px;
      }
    }
  }

  &_theme { // Button themes...

    // Mixin params: $bgColor, $borderColor, $iconColor, $textColor
    @define-mixin buttonStyle $bgColor, $borderColor: $formItemBorderColor, $iconColor: $neutralShadedColor, $textColor: $formItemTextColor, $hoverColor, $activeColor {
      // border-color: $borderColor;
      @mixin FormItemFrame $borderColor, $(formItemBorderSize)px, 0;
      background-color: $bgColor;
      // box-shadow: inset 0 0 0 1px $borderColor;
      .FormButton-Text {
        color: $textColor;
      }
      .FormButton-Icon {
        color: $iconColor;
      }
      // $hoveredBorderColor: color($borderColor shade(5));
      // $activeBorderColor: color($hoveredBorderColor shade(10));
      $hoveredBorderColor: color($hoverColor shade(5));
      $activeBorderColor: color($hoverColor shade(15));
      $hoveredBgColor: color($bgColor shade(5));
      $activeBgColor: color($hoveredBgColor shade(15));
      $glowColor: $borderColor; // $formItemGlowColor;
      $hoveredGlowColor: $activeColor; // color($glowColor alpha(1));
      $activeGlowColor: $activeColor; // color($glowColor alpha(1) shade(10));
      &.FormButton_active,
      &.FormItem_focused,
      &.FormItem_hovered {
        // border-color: $hoveredBorderColor;
        @mixin FormItemFrame $hoveredBorderColor, $(formItemBorderSize)px, 1px, $hoveredGlowColor, 1px, $(formItemOuterGlow)px;
        background-color: $hoveredBgColor;
        // .FormButton-Icon, .FormButton-Text {
        //   opacity: .9;
        // }
      }
      &.FormButton_active,
      &.FormItem_focused {
        @mixin FormItemFrame $activeBorderColor, $(formItemBorderSize)px, 2px, $activeGlowColor, 2px, 1px; // @calc($formItemOuterGlow - 2)px;
        background-color: $activeBgColor;
      }
    }
    @define-mixin styledButton $bgColor, $textColor: $specialContrastColor {
      $borderColor: color($bgColor shade(10)); // $formItemBorderColor;
      $iconColor: $textColor; // color($textColor alpha(.5));
      $hoverColor: color($borderColor shade(5));
      $activeColor: color($borderColor shade(5));
      @mixin buttonStyle $bgColor, $borderColor, $iconColor, $textColor, $hoverColor, $activeColor;
    }
    // @define-mixin styledDarkButton $bgColor, $textColor: $specialContrastColor {
    // ... ???

    &_default {
      $bgColor: color($neutralLightColor tint(10));
      $borderColor: $formItemBorderColor;
      $textColor: #000;
      // $iconColor: $neutralTintedDarkColor;
      // $activeColor: color($primaryColor shade(0));
      $hoverColor: color($primaryColor);
      $activeColor: color($primaryColor alpha(.5));
      @mixin buttonStyle $bgColor, $borderColor, $textColor, $textColor, $hoverColor, $activeColor;
      &^^&_onDark {
        $darkBgColor: color($bgColor alpha(.2));
        $darkBorderColor: color($borderColor alpha(.2));
        $darkTextColor: #fff;
        $darkHoverColor: color($borderColor);
        $darkActiveColor: color($borderColor shade(5));
        @mixin buttonStyle $darkBgColor, $darkBorderColor, $darkTextColor, $darkTextColor, $darkHoverColor, $darkActiveColor;
      }
    }

    // Theme colors

    &_primary { @mixin styledButton $primaryColor, $primaryContrastColor }
    &_secondary { @mixin styledButton $secondaryColor, $secondaryContrastColor }

    // Theme colors...
    @each $color $name in $themeColors {
      &_$(name) { @mixin styledButton $color }
    }

  }

  // TODO: States: `clicked`, `rightIcon`, `onlyIcon`, `largeIcon` (+large button), large sizes (`xl`, `xxl`?)

}
